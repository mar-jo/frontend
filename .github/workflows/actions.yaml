name: Frontend Pipeline

on:
  push:
    branches:
      - main

jobs:
  Lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Install Dependencies
      run: npm ci
      
    - name: Run Lint
      run: npm run lint

  Test:
    needs: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Test
      run: echo Tests not implemented yet
      
  Build:
    needs: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.workflow_run.head_branch }}

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
          
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        tags: user/app:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

  Deliver:
    needs: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.workflow_run.head_branch }}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: user/app:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

#  Deploy:
#    needs: Deliver
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#
#    - name: Download Artifacts
#      uses: actions/download-artifact@v2
#      with:
#        name: app
#
#    - name: Deploy to GitHub Pages
#      uses: peaceiris/actions-gh-pages@v3
#      with:
#        github_token: ${{ secrets.GITHUB_TOKEN }}
#        publish_dir: ./app
