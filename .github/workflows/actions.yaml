name: Frontend Pipeline

on:
  push:
    branches:
      - main

jobs:
  Lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Install Dependencies
      run: npm ci
      
    - name: Run Lint
      run: npm run lint

  Test:
    needs: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Test
      run: echo Tests not implemented yet
      
  Build:
    needs: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.workflow_run.head_branch }}

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        tags: user/app:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

    - name: Save Docker image
      run: |
        docker save user/app:latest > image.tar

    - name: Upload Docker image
      uses: actions/upload-artifact@v2
      with:
        name: docker-image
        path: image.tar

  Deliver:
    needs: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.workflow_run.head_branch }}

    - name: Download Docker image
      uses: actions/download-artifact@v2
      with:
        name: docker-image

    - name: Load Docker image
      run: |
        docker load < image.tar

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  Deploy:
    needs: Deliver
    runs-on: ubuntu-latest
    steps:

    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.KEY }}

    - name: Execute commands on remote server
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} <<EOF
        sudo docker stop frontend || true
        sudo docker rm frontend || true
        sudo docker pull realmarjo/frontend:latest
        sudo docker run -d --name frontend -p 5173:5173 realmarjo/frontend:latest
        EOF
